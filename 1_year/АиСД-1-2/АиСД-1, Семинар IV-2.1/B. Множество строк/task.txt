

B. Множество строк


Ограничение времени
3 секунды


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





Реализуйте структуру данных, являющуюся множеством строк. Структура должна поддерживать вставку, проверку существования и
            удаление элементов. Реализация должна основываться на хеш-таблице с разрешением коллизий методом цепочек.
         
Формат ввода

Первая строка входного файла содержит число запросов N (0 ≤ N ≤ 106). 
         Следующие N строк содержат запросы, представленные целым числом ti и строкой si (-1 ≤ ti ≤ 1, |si| ≤ 10). Строки состоят только из маленьких латинских символов. 
      
Если ti равняется 1, добавьте строку к множеству. Если ti равняется -1, удалите строку из множества. Если ti равняется нулю, выведите 1 или 0 в зависимости от того, есть эта строка в множестве или нет. 
      
Не гарантируется, что на момент добавления строки, ее нет в множестве. Не гарантируется, что на момент удаления строки, она
         есть в множестве. Повторно вставлять строки в множество не следует, то есть это именно множество с точки зрения математики.
      

Формат вывода

На каждый запрос проверки наличия элемента выведите 1 или 0, по одному в строке.
         
Пример 1



Ввод
Вывод




10
0 iii
1 fbw
1 fbw
0 fbw
1 isn
-1 isn
0 isn
1 isn
0 isn
0 fbw

0
1
0
1
1




Пример 2



Ввод
Вывод




10
1 wxfdqygqun
0 wxfdqygqun
-1 pnpgqympmy
0 pnpgqympmy
1 pnpgqympmy
1 otxkrurtdm
0 pnpgqympmy
1 twhqrplevw
1 pnpgqympmy
1 otvptwyypy

1
0
1




Примечания

Не стоит сравнивать строки на равенство, если различаются их хеши.
