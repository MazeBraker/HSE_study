

A. Проверка Красно-черного дерева


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





В данной задаче вам требуется проверить заданное бинарное дерево на красно-черность. В дереве обычно присутствует фиктивная листовая вершина (NIL), которая по определению черная. Мы здесь будем придерживаться
         этого, но во входе она явна задана не будет (читайте описание входного формата). 
      
Напомним свойства красно-черных деревьев:
Прежде всего, это дерево поиска, т.е. для любой вершины дерева node, любой вершины левого поддерева этой вершины left и любой вершины правого поддерева right выполняется строгое неравенство . 
            
Каждая вершина имеет красный или черный цвет. 
Корень дерева и листья (NIL) имеют черный цвет. 
Если вершина — красная, то ее родитель — черный. 
Все простые пути из любой вершины x до листьев содержат одинаковое количество черных вершин. 
            
Заметим, что черная вершина может иметь черного родителя.
      

Формат ввода

В первой строке содержится целое число N (0 ≤ N ≤ 105) — размер дерева. Если N 
               =
                0, то на этом ввод закончен. Иначе на следующей строке содержится натуральное число root (1 ≤ root ≤ N) — номер корневой вершины. В следующих N строках содержатся описания вершин. Каждая строка описания имеет следующий формат:Number Key Left Right Color, где Number — номер соответствующей вершины, Key — ключ вершины, Left, Right — номера левого и правого сына, соответственно (null, если соответствующий сын — это фиктивная вершина), Color — цвет вершины (R или B). Гарантируется, что заданный граф — бинарное дерево.
         
Формат вывода

YES или NO в зависимости от корректности дерева.
Пример 1



Ввод
Вывод




5 1
1 2 2 4 B
2 0 null 3 R
3 1 null null B
4 3 null 5 R
5 4 null null B

NO




Пример 2



Ввод
Вывод




5 1
1 3 2 4 B
2 1 null 3 R
3 2 null null B
4 4 null 5 B
5 5 null null B

NO




Пример 3



Ввод
Вывод




3 1
1 2 2 3 B
2 3 null null R
3 1 null null R

NO




Пример 4



Ввод
Вывод




7 7
7 4 6 5 B
6 2 4 3 R
5 6 2 1 R
4 1 null null B
3 3 null null B
2 5 null null B
1 7 null null B

YES




Пример 5



Ввод
Вывод




1 1
1 1 null null R

NO




