

P. UniquePtr-1


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





Напишите свою упрощённую реализацию класса std::unique_ptr<T>. Подробную спецификацию стандартного std::unique_ptr можно посмотреть на http://en.cppreference.com/w/cpp/memory/unique_ptr. В этой задаче вам не нужно делать специализацию для массива и не нужно предусматривать свой Deleter. 
      
Назовите ваш класс UniquePtr. У класса должен быть один шаблонный параметр T - тип элемента, указатель на который будет храниться
         внутри. 
      
Напишите следующие функции в классе: 


Конструктор по умолчанию, создающий пустой умный указатель. 
Конструктор, принимающий T * и захватывающий владение этой динамической памятью. 
Конструктор перемещения, получающий на вход rvalue-ссылку на другой UniquePtr и отбирающий у него владение ресурсом. 
Оператор присваивания, получающий на вход nullptr (тип - std::nullptr_t, определенный в заголовочном файле cstddef). В результате
               умный указатель должен стать пустым. 
            
Move-оператор присваивания, получающий на вход rvalue-ссылку на другой UniquePtr. 
Деструктор. 
Константный оператор *. 
Константный оператор -> (он должен вернуть просто сам указатель). 
Функцию T * release(), отменяющую владение объектом и возвращающую хранящийся внутри указатель. 
Функцию void reset(T * ptr), после выполнения которой умный указатель должен захватить ptr. 
Функцию void swap(UniquePtr& other), обменивающуюся содержимым с другим умным указателем. 
Функцию T * get() const, возвращающую указатель. 
explicit operator bool() const, позволяющий определить, не пуст ли умный указатель. 


В вашем классе должны быть запрещены конструктор копирования и обычный оператор присваивания. Пометьте все подходящие функции
         тегом noexcept (чтобы подчеркнуть, что они не должны генерировать исключений). 
      
sizeof вашего класса должен совпадать с sizeof от обычного указателя, а дополнительной динамической памяти внутри UniquePtr
         выделяться не должно. То есть UniquePtr не должен иметь накладных расходов на память по сравнению с обычным указателем.
      

Примечания

Сдайте только код самого класса без функции main. Использовать стандартный std::unique_ptr запрещается.
