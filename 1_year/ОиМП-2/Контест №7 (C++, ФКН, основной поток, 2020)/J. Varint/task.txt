

J. Varint


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





В протоколе Protocol Buffers для кодирования чисел используется кодировка Varint (https://clck.ru/CJL7L). Эта кодировка позволяет кодировать маленькие числа меньшим количеством байт. Пусть дано неотрицательное целое число, помещающееся
            в тип uint64_t. Чтобы закодировать его в Varint, надо разбить его двоичную запись на блоки по 7 бит, начиная с младших (правых)
            битов. Эти блоки рассматриваются справа налево, от младших битов к старшим. Очередной закодированный байт получается из очередного
            блока, к которому приписывается ведущая единица, если это не последний байт, и ведущий ноль, если это последний байт. 
         Например, закодируем число 300. В двоичной системе оно выглядит как 100101100. Тут два блока: 10 и 0101100. Сначала выпишем
         правый блок (с ведущей единицей) - 10101100, затем левый блок, дополненный нулями - 00000010. Аналогично, число 31415, записываемое
         в двоичной системе как 111101010110111, закодируется как 10110111 11110101 00000001. 
      
Вам даны байты закодированного числа. Раскодируйте его.

Формат ввода

На вход поступают байты закодированного числа. Гарантируется, что ответ может быть записан в тип данных uint64_t. Удобно прочитать
            эти байты целиком в std::string, а дальше итерироваться по ним с помощью типа unsigned char или uint8_t.
         
Формат вывода

Напечатайте число, которое было закодировано.
Примечания

Обратите внимание, что на вход данные не в текстовой записи (не 10101010 11010101), а в бинарном виде, байтами. Правильный
            способ их чтения такой: 
         std::string s; 
getline(std::cin, s); 
for (uint8_t byte : s) // do something with byte 

