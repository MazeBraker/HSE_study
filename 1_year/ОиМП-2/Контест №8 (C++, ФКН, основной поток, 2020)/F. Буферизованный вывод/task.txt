

F. Буферизованный вывод


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





Вам дан класс Writer, который умеет писать данные на экран, в файл или в память – в общем, неважно куда. У этого класса есть виртуальная функция Write, принимающая на вход указатель на байты памяти и их
            количество. Функция пытается записать эти байты в нужное место. Выглядит этот класс примерно так: https://clck.ru/CbtZu. 
         Однако операция вывода имеет накладные расходы, и частые вызовы Write с маленькими размерами данных могут замедлять программу.
         Вам надо написать класс-наследник BufferedWriter, который осуществлял бы буферизованный вывод. Конструктор этого класса должен
         принимать параметр типа size_t – размер буфера. Переопределенная в этом классе функция Write должна сначала дописывать данные в этот внутренний буфер, и только
         когда он заполнится – вызывать Write базового класса с данными этого буфера. В конце использования класса оставшиеся в буфере данные также должны
         быть записаны через вызов функции Write базового класса. Максимально возможный размер буфера, переданный в конструкторе, в
         процессе работы не должен изменяться.
      

Примечания

Начните свою программу с #include "writer.h" – эта директива подключит нашу версию базового класса Writer. Далее напишите только код класса-наследника BufferedWriter.
