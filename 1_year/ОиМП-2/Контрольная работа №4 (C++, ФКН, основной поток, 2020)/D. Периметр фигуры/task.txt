

D. Периметр фигуры


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





Вам надо написать базовый класс Figure (геометрическая фигура) и унаследованные от него классы Triangle (треугольник) и Rectangle (прямоугольник). 
         Класс Triangle должен иметь конструктор, принимающий на вход три числа типа int — стороны треугольника. Считайте, что треугольник с такими сторонами всегда существует. 
      
Класс Rectangle тоже должен иметь конструктор, принимающий на вход два числа типа int — стороны прямоугольника. 
      
Класс Figure должен объявлять виртуальную функцию int Perimeter() const, возвращающую периметр фигуры. Классы-наследники должны переопределить
         эту функцию правильным образом. 
      
Функцию main писать в вашем коде не надо: она будет в нашей проверяющей программе. Наша программа выглядит примерно так: 
      
#include "figures.h"  #include <vector> #include <iostream>  int main() {     std::vector<Figure*> figures;      std::string type;      while (std::cin >> type) {         if (type == "Triangle") {             int a, b, c;             std::cin >> a >> b >> c;             figures.push_back(new Triangle(a, b, c));         } else if (type == "Rectangle") {             int a, b;             std::cin >> a >> b;             figures.push_back(new Rectangle(a, b));         }     }      for (Figure * f : figures)         std::cout << f->Perimeter() << "\n";      for (Figure * f : figures)         delete f; }


Формат ввода

На вход программе будут поданы типы фигур и их параметры.
Формат вывода

Наша программа с помощью ваших классов напечатает периметры фигур.
Пример



Ввод
Вывод




Triangle 3 4 5
Rectangle 2 3

12
10




Примечания

Не забудьте, что некоторые функции класса необходимо сделать виртуальными для корректной полиморфной работы.
