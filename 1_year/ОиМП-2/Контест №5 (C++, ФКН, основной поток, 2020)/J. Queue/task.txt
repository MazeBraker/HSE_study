

J. Queue


Ограничение времени
1 секунда


Ограничение памяти
64Mb


Ввод
стандартный ввод или input.txt


Вывод
стандартный вывод или output.txt





Вам требуется реализовать класс Queue, аналогичный адаптеру std::queue, являющийся оберткой над некоторым стандартным контейнером и реализующий интерфейс очереди.
            
         Класс должен быть шаблонным. Первый шаблонный параметр T — тип хранимых элементов. Второй шаблонный параметр — контейнер, используемый для хранения элементов (по умолчанию — std::deque<T>): 
template <typename T, typename Container = std::deque<T>> class Queue; 
      
Предусмотрите в классе следующее: 
1. Конструктор по умолчанию, создающий пустую очередь. 
2. Константную функцию front, возвращающую элемент, стоящий в начале очереди. 
      
3. Неконстантную функцию front, возвращающую по ссылке элемент, стоящий в начале очереди (и тем самым позволяющую его изменять). 
      
4. Функцию pop, убирающую элемент из начала очереди (и ничего не возвращающую). 
      
5. Функцию push, кладущую переданный элемент в конец очереди. 
      
6. Функцию size, возвращающую количество элементов. 
      
7. Функцию empty, возвращающую true тогда и только тогда, когда очередь пуста. 
      
8. Операторы == и != для сравнения двух очередей.
      

Примечания

В вашем решении должен быть только код класса и не должно быть функции main. При проверке наша программа test.cpp будет использовать
            ваш класс Queue и протестирует его. Если вы не реализовали какую-либо функцию или оператор, то программа не скомпилируется. 
         Все функции должны быть внутренними функциями-членами класса. 
Гарантируется, что используемый внутри очереди контейнер имеет функции push_back, pop_back, push_front, pop_front, front,
         back, size, empty, operator == и operator !=.
      

